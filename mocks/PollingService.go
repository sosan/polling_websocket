// Code generated by mockery v2.51.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// PollingService is an autogenerated mock type for the PollingService type
type PollingService struct {
	mock.Mock
}

// GetContentActionByID provides a mock function with given fields: actionID, userID
func (_m *PollingService) GetContentActionByID(actionID *string, userID *string) (*string, error) {
	ret := _m.Called(actionID, userID)

	if len(ret) == 0 {
		panic("no return value specified for GetContentActionByID")
	}

	var r0 *string
	var r1 error
	if rf, ok := ret.Get(0).(func(*string, *string) (*string, error)); ok {
		return rf(actionID, userID)
	}
	if rf, ok := ret.Get(0).(func(*string, *string) *string); ok {
		r0 = rf(actionID, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	if rf, ok := ret.Get(1).(func(*string, *string) error); ok {
		r1 = rf(actionID, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPollingService creates a new instance of PollingService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPollingService(t interface {
	mock.TestingT
	Cleanup(func())
}) *PollingService {
	mock := &PollingService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
